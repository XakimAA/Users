{"version":3,"sources":["static/times-circle-solid.svg","components/Notification/notification.jsx","axios.js","Service.js","components/UserCard/userCard.jsx","pages/UserCardPage/userCardPage.jsx","pages/UserList/userlist.jsx","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","props","focusable","className","role","viewBox","ref","ForwardRef","forwardRef","Notification","message","messageType","useState","open","setOpen","useEffect","handleClose","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","action","width","onClick","axios","defaults","baseURL","Service","page","user_requisites","email","size","offset","haveEmail","get","user","post","userID","put","user_id","date_from","date_to","transaction","service","UserCard","isAdding","updateTable","formTitle","collapsePanelText","actionButtonText","user_name","user_custom","register_date","balance","wallet_amount","wallet_currency","enabled","values","setValues","errorFields","setErrorFields","loadButton","setLoadButton","setMessage","setMessageType","handlerOnChange","inputID","event","value","lenght","processAnswer","answer","statusText","status","error","data","extended_message","global_errors","reduce","str","current","property_errors","Paper","isOpened","staticElements","collapsedLabel","expandedLabel","Typography","component","align","onSubmit","preventDefault","addUser","updateUser","then","catch","Grid","container","spacing","item","xs","md","FormControl","fullWidth","TextField","id","label","variant","onChange","disabled","required","test","String","toLowerCase","Date","toLocaleDateString","type","appearance","fetching","columns","name","fieldGetter","maxWidth","UserCardPage","useParams","setUser","amount","comment","transactionInfo","setTransactionInfo","dateFrom","dateTo","errorDate","setErrorDate","valueDate","setValueDate","loadingPage","setloadingPage","userNotFound","setUserNotFound","transactions","setTransactions","addTransactionLoad","setAddTransactionLoad","errorAmount","setErrorAmount","loadingTransaction","setLoadingTransaction","getUserInfo","http_status_code","console","log","getTransactions","handlerOnChangeTransaction","parseFloat","handlerDate","color","fullscreen","centered","to","addTransaction","defaultValue","InputLabelProps","shrink","rows","compact","tableClassName","renderEmptyMessage","renderRow","date","row","toLocaleTimeString","operation_id","map","column","index","CellComponent","rowIndex","columnIndex","UserList","history","useHistory","users","setUsers","recordsTotal","setRecordsTotal","currentPage","setCurrentPage","perPage","setPerPage","loadSearching","setLoadSearching","filters","setFilters","errorEmail","setErrorEmail","getUsers","items","handlerTableClick","param","push","handlerFilterChange","parseInt","total","onChangePage","bind","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce80a905.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"\n});\n\nvar SvgTimesCircleSolid = function SvgTimesCircleSolid(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"times-circle\",\n    className: \"svg-inline--fa fa-times-circle fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTimesCircleSolid, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/times-circle-solid.bb7daa97.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\r\nimport { Snackbar } from '@material-ui/core';\r\n\r\nimport { ReactComponent as CloseIcon } from '../../static/times-circle-solid.svg';\r\nimport './notification.css';\r\n\r\nconst Notification = ({ message, messageType }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(!!message);\r\n  }, [message]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      message={message}\r\n      className={messageType}\r\n      action={<CloseIcon width=\"16px\" onClick={handleClose} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = \"https://livedemo.xsolla.com/fe/test-task/baev\";\r\n\r\nexport default axios;\r\n","import { default as axios } from './axios';\r\nexport class Service {\r\n  getUsers({ user_requisites, email, size }, page) {\r\n    const offset = (page - 1) * size;\r\n    const haveEmail = email ? `&email=${email}` : ''; \r\n    return axios.get(\r\n      `${axios.defaults.baseURL}/users?user_requisites=${user_requisites}&offset=${offset}&limit=${size}${haveEmail}`\r\n    );\r\n  }\r\n\r\n  addUser(user) {\r\n    return axios.post(`${axios.defaults.baseURL}/users`, user);\r\n  }\r\n\r\n  getUserInfo(userID) {\r\n    return axios.get(`${axios.defaults.baseURL}/users/${userID}`);\r\n  }\r\n\r\n  updateUser(user) {\r\n    return axios.put(`${axios.defaults.baseURL}/users/${user.user_id}`, user);\r\n  }\r\n\r\n  getTransactions(\r\n    userID,\r\n    date_from,\r\n    date_to\r\n  ) {\r\n    return axios.get(\r\n      `${axios.defaults.baseURL}/users/${userID}/transactions?datetime_from=${date_from +\":00Z\"}&datetime_to=${date_to+\":00Z\"}`\r\n    );\r\n  }\r\n\r\n  addTransaction(transaction) {\r\n    return axios.post(\r\n      `${axios.defaults.baseURL}/users/${transaction.user_id}/recharge`,\r\n      transaction\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, TextField, Paper, Typography, FormControl } from '@material-ui/core';\r\nimport { Button, Collapse } from 'xsolla-uikit';\r\n\r\nimport './userCard.css';\r\nimport Notification from '../Notification/notification';\r\nimport { Service } from '../../Service';\r\nconst service = new Service();\r\n\r\nconst UserCard = ({ isAdding, user, updateTable }) => {\r\n  const formTitle = isAdding ? 'Добавление пользователя' : 'Информация о пользователе';\r\n  const collapsePanelText = isAdding ? 'Ввести данные' : 'Показать';\r\n  const actionButtonText = isAdding ? 'Добавить' : 'Изменить';\r\n\r\n  const [values, setValues] = useState({\r\n    user_id: '',\r\n    user_name: '',\r\n    user_custom: '',\r\n    email: '',\r\n    register_date: '',\r\n    balance: '',\r\n    wallet_amount: '',\r\n    wallet_currency: '',\r\n    enabled: true,\r\n  });\r\n\r\n  const [errorFields, setErrorFields] = useState({\r\n    user_id: false,\r\n    user_name: false,\r\n    user_custom: false,\r\n    email: false,\r\n  });\r\n\r\n  const [loadButton, setLoadButton] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('success');\r\n\r\n  useEffect(() => {\r\n    if (!isAdding) setValues(user);\r\n  }, [isAdding, user]);\r\n\r\n  const validateEmail = (email) => {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  const handlerEmailChange = (event) => {\r\n    const { value } = event.target;\r\n    setValues({ ...values, email: value });\r\n    setErrorFields({ ...errorFields, email: !validateEmail(value) });\r\n  };\r\n\r\n  const handlerOnChange = (inputID) => (event) => {\r\n    setValues({ ...values, [inputID]: event.target.value });\r\n    setErrorFields({ ...errorFields, [inputID]: event.target.value.lenght === 0 });\r\n  };\r\n\r\n  const handlerSubmitClick = (event) => {\r\n    event.preventDefault();\r\n    setMessage('');\r\n    setLoadButton(true);\r\n    const request = isAdding ? service.addUser(values) : service.updateUser(values);\r\n    request\r\n      .then((answer) => processAnswer(answer))\r\n      .catch((data) => {\r\n        setLoadButton(false);\r\n      });\r\n  };\r\n\r\n  const processAnswer = (answer) => {\r\n    if (answer.statusText === 'OK' && answer.status === 200) {\r\n      let error = '';\r\n      if (\r\n        answer.data &&\r\n        answer.data.extended_message &&\r\n        answer.data.extended_message.global_errors &&\r\n        answer.data.extended_message.global_errors.length > 0\r\n      )\r\n        error = answer.data.extended_message.global_errors.reduce(\r\n          (str, current) => str + ' ' + current,\r\n          0\r\n        );\r\n\r\n      if (\r\n        answer.data &&\r\n        answer.data.extended_message &&\r\n        answer.data.extended_message.property_errors\r\n      )\r\n        error +=\r\n          'Ошибка:' +\r\n          Object.keys(answer.data.extended_message.property_errors).reduce((str, current) => {\r\n            setErrorFields({ ...errorFields, [current]: true });\r\n            return str + ' ' + current + '\\n';\r\n          }, '');\r\n\r\n      if (answer.data && answer.data.message) error += answer.data.message;\r\n      if (error === '') {\r\n        setMessageType('success');\r\n        setMessage(isAdding ? 'Пользователь добавлен' : 'Пользователь изменен');\r\n        if (isAdding) {\r\n          setValues({\r\n            user_id: '',\r\n            user_name: '',\r\n            user_custom: '',\r\n            email: '',\r\n          });\r\n          if (typeof updateTable === \"function\") updateTable()\r\n        }\r\n      } else {\r\n        setMessageType('error');\r\n        setMessage(error);\r\n      }\r\n    } else {\r\n      setMessageType('error');\r\n      setMessage('Ошибка: ' + answer);\r\n    }\r\n    setLoadButton(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className=\"paper\">\r\n        <Collapse\r\n          isOpened={!isAdding}\r\n          staticElements={1}\r\n          collapsedLabel={() => collapsePanelText}\r\n          expandedLabel={() => 'Спрятать'}\r\n        >\r\n          <Typography component=\"p\" align=\"left\" className=\"title\">\r\n            {formTitle}\r\n          </Typography>\r\n          <form onSubmit={handlerSubmitClick}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl fullWidth>\r\n                  <TextField\r\n                    id=\"user_id\"\r\n                    label=\"ID\"\r\n                    variant=\"outlined\"\r\n                    error={errorFields.user_id}\r\n                    onChange={handlerOnChange('user_id')}\r\n                    value={values.user_id}\r\n                    disabled={!isAdding}\r\n                    required\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl fullWidth>\r\n                  <TextField\r\n                    id=\"user_name\"\r\n                    label=\"Имя пользователя\"\r\n                    variant=\"outlined\"\r\n                    error={errorFields.user_name}\r\n                    onChange={handlerOnChange('user_name')}\r\n                    value={values.user_name}\r\n                    required\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl fullWidth>\r\n                  <TextField\r\n                    id=\"user_custom\"\r\n                    label=\"Полное имя\"\r\n                    variant=\"outlined\"\r\n                    error={errorFields.user_custom}\r\n                    onChange={handlerOnChange('user_custom')}\r\n                    value={values.user_custom}\r\n                    required\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl fullWidth>\r\n                  <TextField\r\n                    id=\"email\"\r\n                    label=\"E-mail\"\r\n                    variant=\"outlined\"\r\n                    error={errorFields.email}\r\n                    onChange={handlerEmailChange}\r\n                    value={values.email}\r\n                    required\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              {!isAdding && (\r\n                <>\r\n                  <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        id=\"register_date\"\r\n                        label=\"Дата регистрации\"\r\n                        variant=\"outlined\"\r\n                        value={new Date(values.register_date).toLocaleDateString('ru-RU')}\r\n                        disabled\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        id=\"balance\"\r\n                        label=\"Баланс\"\r\n                        variant=\"outlined\"\r\n                        value={values.balance}\r\n                        disabled\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        id=\"wallet_amount\"\r\n                        label=\"Кошелек\"\r\n                        variant=\"outlined\"\r\n                        value={values.wallet_amount}\r\n                        disabled\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        id=\"wallet_currency\"\r\n                        label=\"Валюта\"\r\n                        variant=\"outlined\"\r\n                        value={values.wallet_currency}\r\n                        disabled\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n              <Grid item xs={12} md={12} align=\"right\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  appearance=\"secondary\"\r\n                  fetching={loadButton}\r\n                  disabled={errorFields.email}\r\n                >\r\n                  {actionButtonText}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Collapse>\r\n      </Paper>\r\n     <Notification message={message} messageType={messageType}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { Grid, TextField, Paper, Typography, FormControl } from '@material-ui/core';\r\nimport { Table, Button, Collapse, Loader } from 'xsolla-uikit';\r\n\r\nimport UserCard from '../../components/UserCard/userCard';\r\nimport Notification from '../../components/Notification/notification';\r\nimport './userCardPage.css';\r\nimport { Service } from '../../Service';\r\nconst service = new Service();\r\n\r\nconst columns = [\r\n  { id: 'operation_id', name: 'ID', fieldGetter: 'operation_id' },\r\n  { id: 'date', name: 'дата', fieldGetter: 'date' },\r\n  { id: 'transaction_type', name: 'тип транзакции', fieldGetter: 'transaction_type' },\r\n  { id: 'amount', name: 'сумма операции', fieldGetter: 'amount' },\r\n  { id: 'user_balance', name: 'баланс', fieldGetter: 'user_balance' },\r\n  { id: 'currency', name: 'валюта', fieldGetter: 'currency' },\r\n  { id: 'comment', name: 'комментарий', fieldGetter: 'comment', maxWidth: 150 },\r\n  { id: 'status', name: 'статус', fieldGetter: 'status' },\r\n];\r\n\r\nconst UserCardPage = (props) => {\r\n  let { id } = useParams();\r\n\r\n  const [user, setUser] = useState({});\r\n\r\n  const [transactionInfo, setTransactionInfo] = useState({\r\n    user_id: id,\r\n    amount: '',\r\n    comment: '',\r\n  });\r\n  const [errorDate, setErrorDate] = useState({\r\n    dateFrom:false,\r\n    dateTo:false\r\n  });\r\n  const [valueDate, setValueDate] = useState({\r\n    dateFrom:\"2017-05-24T10:30\",\r\n    dateTo:\"2020-05-24T10:30\"\r\n  });\r\n\r\n  const [loadingPage, setloadingPage] = useState(true);\r\n  const [userNotFound, setUserNotFound] = useState(false);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [addTransactionLoad, setAddTransactionLoad] = useState(false);\r\n  const [errorAmount, setErrorAmount] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('success');\r\n  const [loadingTransaction, setLoadingTransaction] = useState(false);\r\n\r\n  useEffect(() => {\r\n    service.getUserInfo(id).then((answer)=>{\r\n      setUser(answer.data);\r\n      setloadingPage(false);\r\n      setLoadingTransaction(true);\r\n      if (answer.data.http_status_code === 404) {\r\n        console.log(answer.data.http_status_code);\r\n        return setUserNotFound(true);\r\n      }\r\n      return service.getTransactions(id,valueDate.dateFrom,valueDate.dateTo);\r\n    }).then((answer)=>{\r\n      setTransactions(answer.data);\r\n      setLoadingTransaction(false);\r\n    })\r\n  }, [id]);\r\n\r\n  const handlerOnChangeTransaction = (inputID) => (event) => {\r\n    const { value } = event.target;\r\n    if (inputID === 'amount') {\r\n      setErrorAmount(parseFloat(value) === 0);\r\n    }\r\n    setTransactionInfo({ ...transactionInfo, [inputID]: value });\r\n  };\r\n\r\n  const handlerAddTransation = (event) => {\r\n    event.preventDefault();\r\n    setMessage('');\r\n    setAddTransactionLoad(true);\r\n    service\r\n      .addTransaction(transactionInfo)\r\n      .then((answer) => {\r\n        setAddTransactionLoad(false);\r\n        if (\r\n          !!answer.data &&\r\n          !answer.data.message &&\r\n          answer.statusText === 'OK' &&\r\n          answer.status === 200\r\n        ) {\r\n          setMessageType('success');\r\n          setMessage('Операция выполнена');\r\n          setUser({...user, balance: answer.data.amount});\r\n        } else {\r\n          setMessageType('error');\r\n          setMessage(answer);\r\n        }\r\n      })\r\n      .catch((data) => {\r\n        setAddTransactionLoad(false);\r\n        setMessageType('error');\r\n        setMessage('Ошибка: ' + data);\r\n      });\r\n  };\r\n\r\n  const handlerDate = (inputID) => (event) => {\r\n    const { value } = event.target;\r\n    setErrorDate({...errorDate, [inputID]: value.length === 0});\r\n    setValueDate({ ...valueDate, [inputID]: value });\r\n  };\r\n\r\n  const heandlerSearchTransaction = () => {\r\n    setLoadingTransaction(true);\r\n    service.getTransactions(id,valueDate.dateFrom,valueDate.dateTo).then((answer)=>{\r\n      setTransactions(answer.data);\r\n      setLoadingTransaction(false);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loadingPage && <Loader color=\"blue\" fullscreen={true} centered={true} />}\r\n      {!loadingPage && userNotFound && (\r\n        <>\r\n          <div>Пользователя с таким id не существует</div>\r\n          <Link to=\"/\">Вернуться к списку пользователей</Link>\r\n        </>\r\n      )}\r\n      {!loadingPage && !userNotFound && (\r\n        <>\r\n          <div className=\"title\">\r\n            <Link to=\"/\">Вернуться к списку пользователей</Link>\r\n          </div>\r\n          <UserCard user={user} isAdding={false} />\r\n          <Paper className=\"paper\">\r\n            <Collapse\r\n              isOpened={false}\r\n              staticElements={1}\r\n              collapsedLabel={() => `Ввести данные`}\r\n              expandedLabel={() => 'Спрятать'}\r\n            >\r\n              <Typography component=\"p\" align=\"left\" className=\"title\">\r\n                Добавить операцию\r\n              </Typography>\r\n              <form onSubmit={handlerAddTransation}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={5}>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        id=\"amount\"\r\n                        label=\"Сумма\"\r\n                        variant=\"outlined\"\r\n                        onChange={handlerOnChangeTransaction('amount')}\r\n                        value={transactionInfo.amount}\r\n                        type=\"number\"\r\n                        required\r\n                        error={errorAmount}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={5}>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        id=\"comment\"\r\n                        label=\"Комментарий\"\r\n                        variant=\"outlined\"\r\n                        onChange={handlerOnChangeTransaction('comment')}\r\n                        value={transactionInfo.comment}\r\n                        required\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={2} align=\"right\" className=\"button__height\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      appearance=\"secondary\"\r\n                      fetching={addTransactionLoad}\r\n                      disabled={errorAmount}\r\n                    >\r\n                      Добавить\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Collapse>\r\n          </Paper>\r\n          <Paper>\r\n            <Typography component=\"p\" align=\"left\" className=\"title__table\">\r\n              Все операции пользователя\r\n            </Typography>\r\n            <Grid container spacing={2} className=\"datePicker\">\r\n              <Grid item xs={12} md={5}>\r\n                <TextField\r\n                  id=\"dateFrom\"\r\n                  label=\"Дата с\"\r\n                  type=\"datetime-local\"\r\n                  defaultValue={valueDate.dateFrom}\r\n                  variant=\"outlined\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={handlerDate(\"dateFrom\")}\r\n                  error={errorDate.dateFrom}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={5}>\r\n                <TextField\r\n                  id=\"dateTo\"\r\n                  label=\"Дата по\"\r\n                  type=\"datetime-local\"\r\n                  defaultValue={valueDate.dateTo}\r\n                  variant=\"outlined\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={handlerDate(\"dateTo\")}\r\n                  error={errorDate.dateTo}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={2} align=\"right\" className=\"button__height\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  appearance=\"secondary\"\r\n                  fetching={loadingTransaction}\r\n                  disabled={errorDate.dateFrom || errorDate.dateTo}\r\n                  onClick={heandlerSearchTransaction}\r\n                >\r\n                  Поиск\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Table\r\n              columns={columns}\r\n              rows={transactions}\r\n              compact={true}\r\n              className=\"table-wrapper\"\r\n              tableClassName=\"user-table\"\r\n              fetching={loadingTransaction || addTransactionLoad}\r\n              renderEmptyMessage={() => <div>Нет данных</div>}\r\n              renderRow={(data) => {\r\n                const date = new Date(data.row['date']);\r\n                data.row['date'] = `${date.toLocaleDateString('ru-RU')} ${date.toLocaleTimeString(\r\n                  'ru-RU'\r\n                )}`;\r\n                return (\r\n                  <tr className={data.className} key={data.row.operation_id}>\r\n                    {data.columns.map((column, index) => (\r\n                      <data.CellComponent\r\n                        key={index}\r\n                        column={column}\r\n                        row={data.row}\r\n                        rowIndex={data.rowIndex}\r\n                        columnIndex={index}\r\n                      />\r\n                    ))}\r\n                  </tr>\r\n                );\r\n              }}\r\n            />\r\n          </Paper>\r\n          <Notification message={message} messageType={messageType} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserCardPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Grid, Paper, Typography, TextField, FormControl } from '@material-ui/core';\r\nimport { Table, Button } from 'xsolla-uikit';\r\nimport Pagination from 'xsolla-uikit/lib/pagination'; //отсутствует в общем списке\r\n\r\nimport './userlist.css';\r\nimport UserCard from '../../components/UserCard/userCard';\r\nimport { Service } from '../../Service';\r\nconst service = new Service();\r\n\r\nconst columns = [\r\n  {\r\n    id: 'rowIndex',\r\n    name: '№',\r\n    fieldGetter: 'rowIndex',\r\n  },\r\n  {\r\n    id: 'register_date',\r\n    name: 'Дата регистрации',\r\n    fieldGetter: 'register_date',\r\n  },\r\n  {\r\n    id: 'user_id',\r\n    name: 'ID',\r\n    fieldGetter: 'user_id',\r\n    maxWidth: 150,\r\n  },\r\n  {\r\n    id: 'user_name',\r\n    name: 'Имя пользователя',\r\n    fieldGetter: 'user_name',\r\n    maxWidth: 150,\r\n  },\r\n  {\r\n    id: 'balance',\r\n    name: 'Баланс',\r\n    fieldGetter: 'balance',\r\n    maxWidth: 150,\r\n  },\r\n  {\r\n    id: 'email',\r\n    name: 'E-mail',\r\n    fieldGetter: 'email',\r\n  },\r\n];\r\n\r\nconst UserList = (props) => {\r\n  const history = useHistory();\r\n  const [users, setUsers] = useState([]);\r\n  const [recordsTotal, setRecordsTotal] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [loadSearching, setLoadSearching] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    user_requisites: '',\r\n    email: '',\r\n    size: 10,\r\n  });\r\n  const [errorEmail, setErrorEmail] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, [currentPage]);\r\n\r\n  const getUsers = () => {\r\n    setLoadSearching(true);\r\n    service\r\n      .getUsers(filters, currentPage)\r\n      .then((items) => {\r\n        setUsers(items.data.data);\r\n        setRecordsTotal(items.data.recordsTotal || 0);\r\n        setLoadSearching(false);\r\n        return () => {};\r\n      })\r\n      .catch(() => {\r\n        setLoadSearching(false);\r\n      });\r\n  };\r\n\r\n  const handlerTableClick = (param) => {\r\n    history.push(`/usercard/${param}`);\r\n  };\r\n\r\n  const handlerFilterChange = (inputID) => (event) => {\r\n    setFilters({ ...filters, [inputID]: event.target.value });\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  };\r\n\r\n  const handlerEmailChange = (event) => {\r\n    const { value } = event.target;\r\n    setErrorEmail(value.length !== 0 && !validateEmail(value));\r\n    setFilters({ ...filters, email: value });\r\n  };\r\n\r\n  const handlerSearchClick = () => {\r\n    setPerPage(parseInt(filters.size));\r\n    if (currentPage === 1) getUsers();\r\n    else setCurrentPage(1);\r\n  };\r\n\r\n  // const updateTable = () => {\r\n  //   if (currentPage === 1) getUsers();\r\n  //   else setCurrentPage(1);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <UserCard isAdding updateTable={getUsers} />\r\n      <Paper className=\"paper\">\r\n        <Typography component=\"p\" align=\"left\" className=\"title\">\r\n          Фильтры\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={4}>\r\n            <FormControl fullWidth>\r\n              <TextField\r\n                id=\"user_requisites\"\r\n                label=\"ID или имя пользователя\"\r\n                variant=\"outlined\"\r\n                onChange={handlerFilterChange('user_requisites')}\r\n                value={filters.user_requisites}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <FormControl fullWidth>\r\n              <TextField\r\n                label=\"E-mail\"\r\n                variant=\"outlined\"\r\n                error={errorEmail}\r\n                onChange={handlerEmailChange}\r\n                value={filters.email}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <FormControl fullWidth>\r\n              <TextField\r\n                id=\"size\"\r\n                label=\"Показывать по\"\r\n                variant=\"outlined\"\r\n                onChange={handlerFilterChange('size')}\r\n                value={filters.size}\r\n                type=\"number\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={2} align=\"right\" className=\"button__height\">\r\n            <Button\r\n              type=\"submit\"\r\n              appearance=\"secondary\"\r\n              onClick={handlerSearchClick}\r\n              disabled={errorEmail}\r\n              fetching={loadSearching}\r\n            >\r\n              Поиск\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper>\r\n        <Typography component=\"p\" align=\"left\" className=\"title__table\">\r\n          Все пользователи\r\n        </Typography>\r\n        <Grid container spacing={2} >\r\n          <Grid item xs={12}>\r\n            <Pagination\r\n              current={currentPage}\r\n              total={recordsTotal}\r\n              perPage={perPage}\r\n              onChangePage={setCurrentPage}\r\n              className=\"pagin\"\r\n              size=\"sm\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Table\r\n          columns={columns}\r\n          rows={users}\r\n          compact={true}\r\n          className=\"table-wrapper\"\r\n          tableClassName=\"user-table\"\r\n          fetching={loadSearching}\r\n          renderEmptyMessage={() => <div>Нет данных</div>}\r\n          renderRow={(data) => {\r\n            data.row.rowIndex = data.rowIndex + 1;\r\n            data.row['register_date'] = new Date(data.row['register_date']).toLocaleDateString(\r\n              'ru-RU'\r\n            );\r\n            return (\r\n              <tr\r\n                title=\"Двойнок клик: редактирование пользователя и просмотр операций\"\r\n                className={data.className}\r\n                key={data.row.user_id}\r\n                onClick={handlerTableClick.bind(null, data.row.user_id)}\r\n              >\r\n                {data.columns.map((column, index) => (\r\n                  <data.CellComponent\r\n                    key={index}\r\n                    column={column}\r\n                    row={data.row}\r\n                    rowIndex={data.rowIndex}\r\n                    columnIndex={index}\r\n                  />\r\n                ))}\r\n              </tr>\r\n            );\r\n          }}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport UserCardPage from './pages/UserCardPage/userCardPage';\r\nimport UserList from './pages/UserList/userlist';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n      <Switch>\r\n          <Route path=\"/usercard/:id\">\r\n            <UserCardPage />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <UserList/>\r\n          </Route>\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}