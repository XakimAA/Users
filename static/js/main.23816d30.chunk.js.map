{"version":3,"sources":["static/times-circle-solid.svg","components/Notification/notification.jsx","axios.js","Service.js","components/UserCard/userCard.jsx","pages/UserCardPage/userCardPage.jsx","pages/UserList/userlist.jsx","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","props","focusable","className","role","viewBox","ref","ForwardRef","forwardRef","Notification","message","messageType","useState","open","setOpen","useEffect","handleClose","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","action","width","onClick","axios","defaults","baseURL","Service","page","user_requisites","email","size","offset","haveEmail","get","user","post","userID","put","user_id","date_from","date_to","transaction","service","UserCard","isAdding","updateTable","formTitle","collapsePanelText","actionButtonText","user_name","user_custom","register_date","balance","wallet_amount","wallet_currency","enabled","values","setValues","errorFields","setErrorFields","loadButton","setLoadButton","setMessage","setMessageType","handlerOnChange","inputID","event","value","lenght","processAnswer","answer","statusText","status","error","data","extended_message","global_errors","reduce","str","current","property_errors","Paper","isOpened","staticElements","collapsedLabel","expandedLabel","Typography","component","align","onSubmit","preventDefault","addUser","updateUser","then","catch","Grid","container","spacing","item","xs","md","FormControl","fullWidth","TextField","id","label","variant","onChange","disabled","required","test","String","toLowerCase","Date","toLocaleDateString","type","appearance","fetching","columns","name","fieldGetter","maxWidth","UserCardPage","useParams","setUser","amount","comment","transactionInfo","setTransactionInfo","dateFrom","dateTo","errorDate","setErrorDate","valueDate","setValueDate","loadingPage","setloadingPage","userNotFound","setUserNotFound","transactions","setTransactions","addTransactionLoad","setAddTransactionLoad","errorAmount","setErrorAmount","loadingTransaction","setLoadingTransaction","getInfo","getUserInfo","http_status_code","getTransactions","handlerOnChangeTransaction","parseFloat","handlerDate","map","date","dateFormatted","toLocaleTimeString","color","fullscreen","centered","to","addTransaction","defaultValue","InputLabelProps","shrink","rows","compact","tableClassName","renderEmptyMessage","renderRow","row","operation_id","column","index","CellComponent","rowIndex","columnIndex","UserList","history","useHistory","users","setUsers","recordsTotal","setRecordsTotal","currentPage","setCurrentPage","perPage","setPerPage","loadSearching","setLoadSearching","filters","setFilters","errorEmail","setErrorEmail","getUsers","items","handlerTableClick","param","push","handlerFilterChange","inputProps","min","max","step","parseInt","total","onChangePage","bind","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"gfAAA,SAASA,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAIoB,EAAqB,IAAMC,cAAc,OAAQ,CACnDC,KAAM,eACNC,EAAG,4XAGD,EAAsB,SAA6BC,GACrD,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbC,EAAQhB,EAAyBa,EAAM,CAAC,SAAU,UAEtD,OAAoB,IAAMH,cAAc,MAAOxB,EAAS,CACtD,cAAe,OACf+B,UAAW,QACX,cAAe,MACf,YAAa,eACbC,UAAW,yCACXC,KAAM,MACNC,QAAS,cACTC,IAAKP,GACJE,GAAQD,EAAqB,IAAML,cAAc,QAAS,KAAMK,GAAS,KAAMN,IAGhFa,EAAa,IAAMC,YAAW,SAAUP,EAAOK,GACjD,OAAoB,IAAMX,cAAc,EAAqBxB,EAAS,CACpE4B,OAAQO,GACPL,OCAUQ,GDEA,I,OC7BM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAAkB,EACzBC,oBAAS,GADgB,mBAC1CC,EAD0C,KACpCC,EADoC,KAGjDC,qBAAU,WACRD,IAAUJ,KACT,CAACA,IAEJ,IAAMM,EAAc,WAClBF,GAAQ,IAGV,OACE,kBAACG,EAAA,EAAD,CACEJ,KAAMA,EACNK,iBAAkB,IAClBC,QAASH,EACTI,aAAc,CACZC,SAAU,MACVC,WAAY,UAEdZ,QAASA,EACTP,UAAWQ,EACXY,OAAQ,kBAAC,EAAD,CAAWC,MAAM,OAAOC,QAAST,Q,iCC1B/CU,IAAMC,SAASC,QAAU,gDAEVF,QAAf,ECHaG,EAAb,mGAC6CC,GAAO,IAAvCC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAC3BC,GAAUJ,EAAO,GAAKG,EACtBE,EAAYH,EAAK,iBAAaA,GAAU,GAC9C,OAAON,EAAMU,IAAN,UACFV,EAAMC,SAASC,QADb,kCAC8CG,EAD9C,mBACwEG,EADxE,kBACwFD,GADxF,OAC+FE,MAL1G,8BASUE,GACN,OAAOX,EAAMY,KAAN,UAAcZ,EAAMC,SAASC,QAA7B,UAA8CS,KAVzD,kCAacE,GACV,OAAOb,EAAMU,IAAN,UAAaV,EAAMC,SAASC,QAA5B,kBAA6CW,MAdxD,iCAiBaF,GACT,OAAOX,EAAMc,IAAN,UAAad,EAAMC,SAASC,QAA5B,kBAA6CS,EAAKI,SAAWJ,KAlBxE,sCAsBIE,EACAG,EACAC,GAEA,OAAOjB,EAAMU,IAAN,UACFV,EAAMC,SAASC,QADb,kBAC8BW,EAD9B,uCACmEG,EAAW,OAD9E,wBACoGC,EAAQ,WA3BvH,qCA+BiBC,GACb,OAAOlB,EAAMY,KAAN,UACFZ,EAAMC,SAASC,QADb,kBAC8BgB,EAAYH,QAD1C,aAELG,OAlCN,KCMMC,EAAU,IAAIhB,EAsPLiB,EApPE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUV,EAAwB,EAAxBA,KAAMW,EAAkB,EAAlBA,YAC5BC,EAAYF,EAAW,wIAA4B,+IACnDG,EAAoBH,EAAW,4EAAkB,mDACjDI,EAAmBJ,EAAW,mDAAa,mDAHG,EAKxBnC,mBAAS,CACnC6B,QAAS,GACTW,UAAW,GACXC,YAAa,GACbrB,MAAO,GACPsB,cAAe,GACfC,QAAS,GACTC,cAAe,GACfC,gBAAiB,GACjBC,SAAS,IAdyC,mBAK7CC,EAL6C,KAKrCC,EALqC,OAiBdhD,mBAAS,CAC7C6B,SAAS,EACTW,WAAW,EACXC,aAAa,EACbrB,OAAO,IArB2C,mBAiB7C6B,EAjB6C,KAiBhCC,EAjBgC,OAwBhBlD,oBAAS,GAxBO,mBAwB7CmD,EAxB6C,KAwBjCC,EAxBiC,OAyBtBpD,mBAAS,IAzBa,mBAyB7CF,EAzB6C,KAyBpCuD,EAzBoC,OA0BdrD,mBAAS,WA1BK,mBA0B7CD,EA1B6C,KA0BhCuD,EA1BgC,KA4BpDnD,qBAAU,WACHgC,GAAUa,EAAUvB,KACxB,CAACU,EAAUV,IAEd,IAWM8B,EAAkB,SAACC,GAAD,OAAa,SAACC,GACpCT,EAAU,eAAKD,EAAN,eAAeS,EAAUC,EAAM/F,OAAOgG,SAC/CR,EAAe,eAAKD,EAAN,eAAoBO,EAAwC,IAA9BC,EAAM/F,OAAOgG,MAAMC,YAe3DC,EAAgB,SAACC,GACrB,GAA0B,OAAtBA,EAAOC,YAAyC,MAAlBD,EAAOE,OAAgB,CACvD,IAAIC,EAAQ,GAEVH,EAAOI,MACPJ,EAAOI,KAAKC,kBACZL,EAAOI,KAAKC,iBAAiBC,eAC7BN,EAAOI,KAAKC,iBAAiBC,cAActG,OAAS,IAEpDmG,EAAQH,EAAOI,KAAKC,iBAAiBC,cAAcC,QACjD,SAACC,EAAKC,GAAN,OAAkBD,EAAM,IAAMC,IAC9B,IAIFT,EAAOI,MACPJ,EAAOI,KAAKC,kBACZL,EAAOI,KAAKC,iBAAiBK,kBAE7BP,GACE,wCACAxG,OAAOgB,KAAKqF,EAAOI,KAAKC,iBAAiBK,iBAAiBH,QAAO,SAACC,EAAKC,GAErE,OADApB,EAAe,eAAKD,EAAN,eAAoBqB,GAAU,KACrCD,EAAM,IAAMC,EAAU,OAC5B,KAEHT,EAAOI,MAAQJ,EAAOI,KAAKnE,UAASkE,GAASH,EAAOI,KAAKnE,SAC/C,KAAVkE,GACFV,EAAe,WACfD,EAAWlB,EAAW,4HAA0B,uHAC5CA,IACFa,EAAU,CACRnB,QAAS,GACTW,UAAW,GACXC,YAAa,GACbrB,MAAO,KAEkB,oBAAhBgB,GAA4BA,OAGzCkB,EAAe,SACfD,EAAWW,SAGbV,EAAe,SACfD,EAAW,yCAAaQ,GAE1BT,GAAc,IAGhB,OACE,oCACE,kBAACoB,EAAA,EAAD,CAAOjF,UAAU,SACf,kBAAC,WAAD,CACEkF,UAAWtC,EACXuC,eAAgB,EAChBC,eAAgB,kBAAMrC,GACtBsC,cAAe,iBAAM,qDAErB,kBAACC,EAAA,EAAD,CAAYC,UAAU,IAAIC,MAAM,OAAOxF,UAAU,SAC9C8C,GAEH,0BAAM2C,SA1Ea,SAACvB,GAC1BA,EAAMwB,iBACN5B,EAAW,IACXD,GAAc,IACEjB,EAAWF,EAAQiD,QAAQnC,GAAUd,EAAQkD,WAAWpC,IAErEqC,MAAK,SAACvB,GAAD,OAAYD,EAAcC,MAC/BwB,OAAM,SAACpB,GACNb,GAAc,QAmEV,kBAACkC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,UACHC,MAAM,KACNC,QAAQ,WACRjC,MAAOf,EAAYpB,QACnBqE,SAAU3C,EAAgB,WAC1BG,MAAOX,EAAOlB,QACdsE,UAAWhE,EACXiE,UAAQ,MAId,kBAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,YACHC,MAAM,8FACNC,QAAQ,WACRjC,MAAOf,EAAYT,UACnB0D,SAAU3C,EAAgB,aAC1BG,MAAOX,EAAOP,UACd4D,UAAQ,MAId,kBAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,cACHC,MAAM,0DACNC,QAAQ,WACRjC,MAAOf,EAAYR,YACnByD,SAAU3C,EAAgB,eAC1BG,MAAOX,EAAON,YACd2D,UAAQ,MAId,kBAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,QACHC,MAAM,SACNC,QAAQ,WACRjC,MAAOf,EAAY7B,MACnB8E,SAtIS,SAACzC,GAAW,IALhBrC,EAMbsC,EAAUD,EAAM/F,OAAhBgG,MACRV,EAAU,eAAKD,EAAN,CAAc3B,MAAOsC,KAC9BR,EAAe,eAAKD,EAAN,CAAmB7B,OARZA,EAQkCsC,GAP5C,0JACD2C,KAAKC,OAAOlF,GAAOmF,oBA0Ib7C,MAAOX,EAAO3B,MACdgF,UAAQ,OAIZjE,GACA,oCACE,kBAACmD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,gBACHC,MAAM,8FACNC,QAAQ,WACRvC,MAAO,IAAI8C,KAAKzD,EAAOL,eAAe+D,mBAAmB,SACzDN,UAAQ,MAId,kBAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,UACHC,MAAM,uCACNC,QAAQ,WACRvC,MAAOX,EAAOJ,QACdwD,UAAQ,MAId,kBAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,gBACHC,MAAM,6CACNC,QAAQ,WACRvC,MAAOX,EAAOH,cACduD,UAAQ,MAId,kBAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,uCACNC,QAAQ,WACRvC,MAAOX,EAAOF,gBACdsD,UAAQ,OAMlB,kBAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIZ,MAAM,SAC/B,kBAAC,SAAD,CACE2B,KAAK,SACLC,WAAW,YACXC,SAAUzD,EACVgD,SAAUlD,EAAY7B,OAErBmB,QAOb,kBAAC,EAAD,CAAczC,QAASA,EAASC,YAAaA,MC/O7CkC,G,OAAU,IAAIhB,GAEd4F,EAAU,CACd,CAAEd,GAAI,eAAgBe,KAAM,KAAMC,YAAa,gBAC/C,CAAEhB,GAAI,OAAQe,KAAM,2BAAQC,YAAa,iBACzC,CAAEhB,GAAI,mBAAoBe,KAAM,kFAAkBC,YAAa,oBAC/D,CAAEhB,GAAI,SAAUe,KAAM,kFAAkBC,YAAa,UACrD,CAAEhB,GAAI,eAAgBe,KAAM,uCAAUC,YAAa,gBACnD,CAAEhB,GAAI,WAAYe,KAAM,uCAAUC,YAAa,YAC/C,CAAEhB,GAAI,UAAWe,KAAM,qEAAeC,YAAa,UAAWC,SAAU,KACxE,CAAEjB,GAAI,SAAUe,KAAM,uCAAUC,YAAa,WAiQhCE,EA9PM,SAAC5H,GAAW,IACzB0G,EAAOmB,cAAPnB,GADwB,EAGN/F,mBAAS,IAHH,mBAGvByB,EAHuB,KAGjB0F,EAHiB,OAKgBnH,mBAAS,CACrD6B,QAASkE,EACTqB,OAAQ,GACRC,QAAS,KARmB,mBAKvBC,EALuB,KAKNC,EALM,OAUIvH,mBAAS,CACzCwH,UAAU,EACVC,QAAQ,IAZoB,mBAUvBC,EAVuB,KAUZC,EAVY,OAcI3H,mBAAS,CACzCwH,SAAU,mBACVC,OAAQ,qBAhBoB,mBAcvBG,EAduB,KAcZC,EAdY,OAmBQ7H,oBAAS,GAnBjB,mBAmBvB8H,EAnBuB,KAmBVC,EAnBU,OAoBU/H,oBAAS,GApBnB,mBAoBvBgI,EApBuB,KAoBTC,EApBS,OAqBUjI,mBAAS,IArBnB,mBAqBvBkI,EArBuB,KAqBTC,EArBS,OAsBsBnI,oBAAS,GAtB/B,mBAsBvBoI,EAtBuB,KAsBHC,EAtBG,OAuBQrI,oBAAS,GAvBjB,mBAuBvBsI,EAvBuB,KAuBVC,GAvBU,QAwBAvI,mBAAS,IAxBT,qBAwBvBF,GAxBuB,MAwBduD,GAxBc,SAyBQrD,mBAAS,WAzBjB,qBAyBvBD,GAzBuB,MAyBVuD,GAzBU,SA0BsBtD,oBAAS,GA1B/B,qBA0BvBwI,GA1BuB,MA0BHC,GA1BG,MA4B9BtI,qBAAU,WACRuI,GAAQ3C,KACP,CAACA,IAEJ,IAAM2C,GAAU,SAAC3C,GACf9D,EACG0G,YAAY5C,GACZX,MAAK,SAACvB,GAIL,OAHAsD,EAAQtD,EAAOI,MACf8D,GAAe,GAEsB,MAAjClE,EAAOI,KAAK2E,mBACdX,GAAgB,IACT,MAIV7C,MAAK,SAACvB,GACDA,GACFgF,SAKFC,GAA6B,SAACtF,GAAD,OAAa,SAACC,GAAW,IAClDC,EAAUD,EAAM/F,OAAhBgG,MACQ,WAAZF,GACF+E,GAAqC,IAAtBQ,WAAWrF,IAE5B6D,EAAmB,eAAKD,EAAN,eAAwB9D,EAAUE,OAiChDsF,GAAc,SAACxF,GAAD,OAAa,SAACC,GAAW,IACnCC,EAAUD,EAAM/F,OAAhBgG,MACRiE,EAAa,eAAKD,EAAN,eAAkBlE,EAA2B,IAAjBE,EAAM7F,UAC9CgK,EAAa,eAAKD,EAAN,eAAkBpE,EAAUE,OAGpCmF,GAAkB,WACtBJ,IAAsB,GACtBxG,EAAQ4G,gBAAgB9C,EAAI6B,EAAUJ,SAAUI,EAAUH,QAAQrC,MAAK,SAACvB,GACtEA,EAAOI,KAAKgF,KAAI,SAACjH,GACf,IAAMkH,EAAO,IAAI1C,KAAKxE,EAAYkH,MAClClH,EAAYmH,cAAZ,UAA+BD,EAAKzC,mBAAmB,SAAvD,YAAmEyC,EAAKE,mBACtE,aAGJjB,EAAgBtE,EAAOI,MACvBwE,IAAsB,OAI1B,OACE,oCACGX,GAAe,kBAAC,SAAD,CAAQuB,MAAM,OAAOC,YAAY,EAAMC,UAAU,KAC/DzB,GAAeE,GACf,oCACE,yBAAKzI,UAAU,0BAAf,+LACA,kBAAC,OAAD,CAAMiK,GAAG,KAAT,uLAGF1B,IAAgBE,GAChB,oCACE,yBAAKzI,UAAU,SACb,kBAAC,OAAD,CAAMiK,GAAG,KAAT,sLAEF,kBAAC,EAAD,CAAU/H,KAAMA,EAAMU,UAAU,IAChC,kBAACqC,EAAA,EAAD,CAAOjF,UAAU,SACf,kBAAC,WAAD,CACEkF,UAAU,EACVC,eAAgB,EAChBC,eAAgB,8FAChBC,cAAe,iBAAM,qDAErB,kBAACC,EAAA,EAAD,CAAYC,UAAU,IAAIC,MAAM,OAAOxF,UAAU,SAAjD,qGAGA,0BAAMyF,SA3EW,SAACvB,GAC5BA,EAAMwB,iBACN5B,GAAW,IACXgF,GAAsB,GACtBpG,EACGwH,eAAenC,GACflC,MAAK,SAACvB,GACLwE,GAAsB,GAElBxE,EAAOI,OACRJ,EAAOI,KAAKnE,SACS,OAAtB+D,EAAOC,YACW,MAAlBD,EAAOE,QAEPT,GAAe,WACfD,GAAW,2GACXqF,GAAQ3C,GACRwB,EAAmB,eAAKD,EAAN,CAAuBF,OAAQ,GAAIC,QAAS,QAE9D/D,GAAe,SACfD,GAAWQ,EAAOI,KAAKnE,aAG1BuF,OAAM,SAACpB,GACNoE,GAAsB,GACtB/E,GAAe,SACfD,GAAW,yCAAaY,QAkDhB,kBAACqB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,SACHC,MAAM,iCACNC,QAAQ,WACRC,SAAU4C,GAA2B,UACrCpF,MAAO4D,EAAgBF,OACvBV,KAAK,SACLN,UAAQ,EACRpC,MAAOsE,MAIb,kBAAChD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,UACHC,MAAM,qEACNC,QAAQ,WACRC,SAAU4C,GAA2B,WACrCpF,MAAO4D,EAAgBD,QACvBjB,UAAQ,MAId,kBAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGZ,MAAM,QAAQxF,UAAU,kBAChD,kBAAC,SAAD,CACEmH,KAAK,SACLC,WAAW,YACXC,SAAUwB,EACVjC,SAAUmC,GAJZ,yDAaV,kBAAC9D,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAYC,UAAU,IAAIC,MAAM,OAAOxF,UAAU,gBAAjD,gJAGA,kBAAC+F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGjG,UAAU,cACpC,kBAAC+F,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACG,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,kCACNU,KAAK,iBACLgD,aAAc9B,EAAUJ,SACxBvB,QAAQ,WACR0D,gBAAiB,CACfC,QAAQ,GAEV1D,SAAU8C,GAAY,YACtBhF,MAAO0D,EAAUF,YAGrB,kBAAClC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACG,EAAA,EAAD,CACEC,GAAG,SACHC,MAAM,wCACNU,KAAK,iBACLgD,aAAc9B,EAAUH,OACxBxB,QAAQ,WACR0D,gBAAiB,CACfC,QAAQ,GAEV1D,SAAU8C,GAAY,UACtBhF,MAAO0D,EAAUD,UAGrB,kBAACnC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGZ,MAAM,QAAQxF,UAAU,kBAChD,kBAAC,SAAD,CACEmH,KAAK,SACLC,WAAW,YACXC,SAAU4B,GACVrC,SAAUuB,EAAUF,UAAYE,EAAUD,OAC1C5G,QAASgI,IALX,oCAWJ,kBAAC,QAAD,CACEhC,QAASA,EACTgD,KAAM3B,EACN4B,SAAS,EACTvK,UAAU,gBACVwK,eAAe,aACfnD,SAAU4B,IAAsBJ,EAChC4B,mBAAoB,kBAAM,yFAC1BC,UAAW,SAAChG,GACV,OACE,wBAAI1E,UAAW0E,EAAK1E,UAAWxB,IAAKkG,EAAKiG,IAAIC,cAC1ClG,EAAK4C,QAAQoC,KAAI,SAACmB,EAAQC,GAAT,OAChB,kBAACpG,EAAKqG,cAAN,CACEvM,IAAKsM,EACLD,OAAQA,EACRF,IAAKjG,EAAKiG,IACVK,SAAUtG,EAAKsG,SACfC,YAAaH,YAQ3B,kBAAC,EAAD,CAAcvK,QAASA,GAASC,YAAaA,Q,kBCpQjDkC,G,OAAU,IAAIhB,GAEd4F,EAAU,CACd,CACEd,GAAI,WACJe,KAAM,SACNC,YAAa,YAEf,CACEhB,GAAI,gBACJe,KAAM,8FACNC,YAAa,iBAEf,CACEhB,GAAI,UACJe,KAAM,KACNC,YAAa,UACbC,SAAU,KAEZ,CACEjB,GAAI,YACJe,KAAM,8FACNC,YAAa,YACbC,SAAU,KAEZ,CACEjB,GAAI,UACJe,KAAM,uCACNC,YAAa,UACbC,SAAU,KAEZ,CACEjB,GAAI,QACJe,KAAM,SACNC,YAAa,UA6KF0D,EAzKE,SAACpL,GAChB,IAAMqL,EAAUC,cADU,EAEA3K,mBAAS,IAFT,mBAEnB4K,EAFmB,KAEZC,EAFY,OAGc7K,mBAAS,GAHvB,mBAGnB8K,EAHmB,KAGLC,EAHK,OAIY/K,mBAAS,GAJrB,mBAInBgL,EAJmB,KAINC,EAJM,OAKIjL,mBAAS,IALb,mBAKnBkL,EALmB,KAKVC,EALU,OAMgBnL,oBAAS,GANzB,mBAMnBoL,EANmB,KAMJC,EANI,OAOIrL,mBAAS,CACrCmB,gBAAiB,GACjBC,MAAO,GACPC,KAAM,KAVkB,mBAOnBiK,EAPmB,KAOVC,EAPU,OAYUvL,oBAAS,GAZnB,mBAYnBwL,EAZmB,KAYPC,EAZO,KAc1BtL,qBAAU,WACRuL,MACC,CAACV,IAEJ,IAAMU,EAAW,WACfL,GAAiB,GACjBpJ,EACGyJ,SAASJ,EAASN,GAClB5F,MAAK,SAACuG,GAIL,OAHAd,EAASc,EAAM1H,KAAKA,MACpB8G,EAAgBY,EAAM1H,KAAK6G,cAAgB,GAC3CO,GAAiB,GACV,gBAERhG,OAAM,WACLgG,GAAiB,OAIjBO,EAAoB,SAACC,GACzBnB,EAAQoB,KAAR,oBAA0BD,KAGtBE,EAAsB,SAACvI,GAAD,OAAa,SAACC,GACxC8H,EAAW,eAAKD,EAAN,eAAgB9H,EAAUC,EAAM/F,OAAOgG,WAoBnD,OACE,oCACE,kBAAC,EAAD,CAAUvB,UAAQ,EAACC,YAAasJ,IAChC,kBAAClH,EAAA,EAAD,CAAOjF,UAAU,SACf,kBAACsF,EAAA,EAAD,CAAYC,UAAU,IAAIC,MAAM,OAAOxF,UAAU,SAAjD,8CAGA,kBAAC+F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,oHACNC,QAAQ,WACRC,SAAU6F,EAAoB,mBAC9BrI,MAAO4H,EAAQnK,oBAIrB,kBAACmE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEE,MAAM,SACNC,QAAQ,WACRjC,MAAOwH,EACPtF,SArCa,SAACzC,GAAW,IAC7BC,EAAUD,EAAM/F,OAAhBgG,MACR+H,EAA+B,IAAjB/H,EAAM7F,SANT,0JACDwI,KAAKC,OAKoC5C,GALtB6C,gBAM7BgF,EAAW,eAAKD,EAAN,CAAelK,MAAOsC,MAmCpBA,MAAO4H,EAAQlK,UAIrB,kBAACkE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,4EACNC,QAAQ,WACRC,SAAU6F,EAAoB,QAC9BrI,MAAO4H,EAAQjK,KACfqF,KAAK,SACLsF,WAAY,CAAEC,IAAK,IAAKC,IAAK,KAAMC,KAAM,SAI/C,kBAAC7G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGZ,MAAM,QAAQxF,UAAU,kBAChD,kBAAC,SAAD,CACEmH,KAAK,SACLC,WAAW,YACX9F,QArDe,WACzBsK,EAAWiB,SAASd,EAAQjK,OACR,IAAhB2J,EAAmBU,IAClBT,EAAe,IAmDV9E,SAAUqF,EACV5E,SAAUwE,GALZ,qCAYN,kBAAC5G,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAYC,UAAU,IAAIC,MAAM,OAAOxF,UAAU,gBAAjD,+FAGA,kBAAC+F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CACEpB,QAAS0G,EACTqB,MAAOvB,EACPI,QAASA,EACToB,aAAcrB,EACd1L,UAAU,QACV8B,KAAK,SAIX,kBAAC,QAAD,CACEwF,QAASA,EACTgD,KAAMe,EACNd,SAAS,EACTvK,UAAU,gBACVwK,eAAe,aACfnD,SAAUwE,EACVpB,mBAAoB,kBAAM,yFAC1BC,UAAW,SAAChG,GAMV,OALAA,EAAKiG,IAAIK,UAAYS,EAAc,GAAGE,EAAUjH,EAAKsG,SAAW,EAEhEtG,EAAKiG,IAAL,cAA4B,IAAI1D,KAAKvC,EAAKiG,IAAL,eAA2BzD,mBAC9D,SAGA,wBACErH,MAAM,8UACNG,UAAW0E,EAAK1E,UAChBxB,IAAKkG,EAAKiG,IAAIrI,QACdhB,QAAS+K,EAAkBW,KAAK,KAAMtI,EAAKiG,IAAIrI,UAE9CoC,EAAK4C,QAAQoC,KAAI,SAACmB,EAAQC,GAAT,OAChB,kBAACpG,EAAKqG,cAAN,CACEvM,IAAKsM,EACLD,OAAQA,EACRF,IAAKjG,EAAKiG,IACVK,SAAUtG,EAAKsG,SACfC,YAAaH,cC9KlBmC,MAlBf,WACE,OACE,kBAAC,gBAAD,KACA,yBAAKjN,UAAU,OACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkN,KAAK,iBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUjD,GAAG,eCXHkD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjI,MAAK,SAAAkI,GACJA,EAAaC,gBAEdlI,OAAM,SAAArB,GACLwJ,QAAQxJ,MAAMA,EAAMlE,c","file":"static/js/main.23816d30.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"\n});\n\nvar SvgTimesCircleSolid = function SvgTimesCircleSolid(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"times-circle\",\n    className: \"svg-inline--fa fa-times-circle fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTimesCircleSolid, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/times-circle-solid.bb7daa97.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\nimport { Snackbar } from '@material-ui/core';\n\nimport { ReactComponent as CloseIcon } from '../../static/times-circle-solid.svg';\nimport './notification.css';\n\nconst Notification = ({ message, messageType }) => {\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    setOpen(!!message);\n  }, [message]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n      message={message}\n      className={messageType}\n      action={<CloseIcon width=\"16px\" onClick={handleClose} />}\n    />\n  );\n};\n\nexport default Notification;\n","import axios from 'axios';\n\naxios.defaults.baseURL = \"https://livedemo.xsolla.com/fe/test-task/baev\";\n\nexport default axios;\n","import { default as axios } from './axios';\nexport class Service {\n  getUsers({ user_requisites, email, size }, page) {\n    const offset = (page - 1) * size;\n    const haveEmail = email ? `&email=${email}` : ''; \n    return axios.get(\n      `${axios.defaults.baseURL}/users?user_requisites=${user_requisites}&offset=${offset}&limit=${size}${haveEmail}`\n    );\n  }\n\n  addUser(user) {\n    return axios.post(`${axios.defaults.baseURL}/users`, user);\n  }\n\n  getUserInfo(userID) {\n    return axios.get(`${axios.defaults.baseURL}/users/${userID}`);\n  }\n\n  updateUser(user) {\n    return axios.put(`${axios.defaults.baseURL}/users/${user.user_id}`, user);\n  }\n\n  getTransactions(\n    userID,\n    date_from,\n    date_to\n  ) {\n    return axios.get(\n      `${axios.defaults.baseURL}/users/${userID}/transactions?datetime_from=${date_from +\":00Z\"}&datetime_to=${date_to+\":00Z\"}`\n    );\n  }\n\n  addTransaction(transaction) {\n    return axios.post(\n      `${axios.defaults.baseURL}/users/${transaction.user_id}/recharge`,\n      transaction\n    );\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid, TextField, Paper, Typography, FormControl } from '@material-ui/core';\nimport { Button, Collapse } from 'xsolla-uikit';\n\nimport './userCard.css';\nimport Notification from '../Notification/notification';\nimport { Service } from '../../Service';\nconst service = new Service();\n\nconst UserCard = ({ isAdding, user, updateTable }) => {\n  const formTitle = isAdding ? 'Добавление пользователя' : 'Информация о пользователе';\n  const collapsePanelText = isAdding ? 'Ввести данные' : 'Показать';\n  const actionButtonText = isAdding ? 'Добавить' : 'Изменить';\n\n  const [values, setValues] = useState({\n    user_id: '',\n    user_name: '',\n    user_custom: '',\n    email: '',\n    register_date: '',\n    balance: '',\n    wallet_amount: '',\n    wallet_currency: '',\n    enabled: true,\n  });\n\n  const [errorFields, setErrorFields] = useState({\n    user_id: false,\n    user_name: false,\n    user_custom: false,\n    email: false,\n  });\n\n  const [loadButton, setLoadButton] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('success');\n\n  useEffect(() => {\n    if (!isAdding) setValues(user);\n  }, [isAdding, user]);\n\n  const validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const handlerEmailChange = (event) => {\n    const { value } = event.target;\n    setValues({ ...values, email: value });\n    setErrorFields({ ...errorFields, email: !validateEmail(value) });\n  };\n\n  const handlerOnChange = (inputID) => (event) => {\n    setValues({ ...values, [inputID]: event.target.value });\n    setErrorFields({ ...errorFields, [inputID]: event.target.value.lenght === 0 });\n  };\n\n  const handlerSubmitClick = (event) => {\n    event.preventDefault();\n    setMessage('');\n    setLoadButton(true);\n    const request = isAdding ? service.addUser(values) : service.updateUser(values);\n    request\n      .then((answer) => processAnswer(answer))\n      .catch((data) => {\n        setLoadButton(false);\n      });\n  };\n\n  const processAnswer = (answer) => {\n    if (answer.statusText === 'OK' && answer.status === 200) {\n      let error = '';\n      if (\n        answer.data &&\n        answer.data.extended_message &&\n        answer.data.extended_message.global_errors &&\n        answer.data.extended_message.global_errors.length > 0\n      )\n        error = answer.data.extended_message.global_errors.reduce(\n          (str, current) => str + ' ' + current,\n          0\n        );\n\n      if (\n        answer.data &&\n        answer.data.extended_message &&\n        answer.data.extended_message.property_errors\n      )\n        error +=\n          'Ошибка:' +\n          Object.keys(answer.data.extended_message.property_errors).reduce((str, current) => {\n            setErrorFields({ ...errorFields, [current]: true });\n            return str + ' ' + current + '\\n';\n          }, '');\n\n      if (answer.data && answer.data.message) error += answer.data.message;\n      if (error === '') {\n        setMessageType('success');\n        setMessage(isAdding ? 'Пользователь добавлен' : 'Пользователь изменен');\n        if (isAdding) {\n          setValues({\n            user_id: '',\n            user_name: '',\n            user_custom: '',\n            email: '',\n          });\n          if (typeof updateTable === 'function') updateTable();\n        }\n      } else {\n        setMessageType('error');\n        setMessage(error);\n      }\n    } else {\n      setMessageType('error');\n      setMessage('Ошибка: ' + answer);\n    }\n    setLoadButton(false);\n  };\n\n  return (\n    <>\n      <Paper className=\"paper\">\n        <Collapse\n          isOpened={!isAdding}\n          staticElements={1}\n          collapsedLabel={() => collapsePanelText}\n          expandedLabel={() => 'Спрятать'}\n        >\n          <Typography component=\"p\" align=\"left\" className=\"title\">\n            {formTitle}\n          </Typography>\n          <form onSubmit={handlerSubmitClick}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <FormControl fullWidth>\n                  <TextField\n                    id=\"user_id\"\n                    label=\"ID\"\n                    variant=\"outlined\"\n                    error={errorFields.user_id}\n                    onChange={handlerOnChange('user_id')}\n                    value={values.user_id}\n                    disabled={!isAdding}\n                    required\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <FormControl fullWidth>\n                  <TextField\n                    id=\"user_name\"\n                    label=\"Имя пользователя\"\n                    variant=\"outlined\"\n                    error={errorFields.user_name}\n                    onChange={handlerOnChange('user_name')}\n                    value={values.user_name}\n                    required\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <FormControl fullWidth>\n                  <TextField\n                    id=\"user_custom\"\n                    label=\"Полное имя\"\n                    variant=\"outlined\"\n                    error={errorFields.user_custom}\n                    onChange={handlerOnChange('user_custom')}\n                    value={values.user_custom}\n                    required\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <FormControl fullWidth>\n                  <TextField\n                    id=\"email\"\n                    label=\"E-mail\"\n                    variant=\"outlined\"\n                    error={errorFields.email}\n                    onChange={handlerEmailChange}\n                    value={values.email}\n                    required\n                  />\n                </FormControl>\n              </Grid>\n              {!isAdding && (\n                <>\n                  <Grid item xs={12} md={6}>\n                    <FormControl fullWidth>\n                      <TextField\n                        id=\"register_date\"\n                        label=\"Дата регистрации\"\n                        variant=\"outlined\"\n                        value={new Date(values.register_date).toLocaleDateString('ru-RU')}\n                        disabled\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <FormControl fullWidth>\n                      <TextField\n                        id=\"balance\"\n                        label=\"Баланс\"\n                        variant=\"outlined\"\n                        value={values.balance}\n                        disabled\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <FormControl fullWidth>\n                      <TextField\n                        id=\"wallet_amount\"\n                        label=\"Кошелек\"\n                        variant=\"outlined\"\n                        value={values.wallet_amount}\n                        disabled\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <FormControl fullWidth>\n                      <TextField\n                        id=\"wallet_currency\"\n                        label=\"Валюта\"\n                        variant=\"outlined\"\n                        value={values.wallet_currency}\n                        disabled\n                      />\n                    </FormControl>\n                  </Grid>\n                </>\n              )}\n              <Grid item xs={12} md={12} align=\"right\">\n                <Button\n                  type=\"submit\"\n                  appearance=\"secondary\"\n                  fetching={loadButton}\n                  disabled={errorFields.email}\n                >\n                  {actionButtonText}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Collapse>\n      </Paper>\n      <Notification message={message} messageType={messageType} />\n    </>\n  );\n};\n\nexport default UserCard;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Grid, TextField, Paper, Typography, FormControl } from '@material-ui/core';\nimport { Table, Button, Collapse, Loader } from 'xsolla-uikit';\n\nimport UserCard from '../../components/UserCard/userCard';\nimport Notification from '../../components/Notification/notification';\nimport './userCardPage.css';\nimport { Service } from '../../Service';\nconst service = new Service();\n\nconst columns = [\n  { id: 'operation_id', name: 'ID', fieldGetter: 'operation_id' },\n  { id: 'date', name: 'дата', fieldGetter: 'dateFormatted' },\n  { id: 'transaction_type', name: 'тип транзакции', fieldGetter: 'transaction_type' },\n  { id: 'amount', name: 'сумма операции', fieldGetter: 'amount' },\n  { id: 'user_balance', name: 'баланс', fieldGetter: 'user_balance' },\n  { id: 'currency', name: 'валюта', fieldGetter: 'currency' },\n  { id: 'comment', name: 'комментарий', fieldGetter: 'comment', maxWidth: 150 },\n  { id: 'status', name: 'статус', fieldGetter: 'status' },\n];\n\nconst UserCardPage = (props) => {\n  let { id } = useParams();\n\n  const [user, setUser] = useState({});\n\n  const [transactionInfo, setTransactionInfo] = useState({\n    user_id: id,\n    amount: '',\n    comment: '',\n  });\n  const [errorDate, setErrorDate] = useState({\n    dateFrom: false,\n    dateTo: false,\n  });\n  const [valueDate, setValueDate] = useState({\n    dateFrom: '2017-05-24T10:30',\n    dateTo: '2020-05-24T10:30',\n  });\n\n  const [loadingPage, setloadingPage] = useState(true);\n  const [userNotFound, setUserNotFound] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  const [addTransactionLoad, setAddTransactionLoad] = useState(false);\n  const [errorAmount, setErrorAmount] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('success');\n  const [loadingTransaction, setLoadingTransaction] = useState(false);\n\n  useEffect(() => {\n    getInfo(id);\n  }, [id]);\n\n  const getInfo = (id) => {\n    service\n      .getUserInfo(id)\n      .then((answer) => {\n        setUser(answer.data);\n        setloadingPage(false);\n\n        if (answer.data.http_status_code === 404) {\n          setUserNotFound(true);\n          return false;\n        }\n        return true;\n      })\n      .then((answer) => {\n        if (answer) {\n          getTransactions();\n        }\n      });\n  };\n\n  const handlerOnChangeTransaction = (inputID) => (event) => {\n    const { value } = event.target;\n    if (inputID === 'amount') {\n      setErrorAmount(parseFloat(value) === 0);\n    }\n    setTransactionInfo({ ...transactionInfo, [inputID]: value });\n  };\n\n  const handlerAddTransation = (event) => {\n    event.preventDefault();\n    setMessage('');\n    setAddTransactionLoad(true);\n    service\n      .addTransaction(transactionInfo)\n      .then((answer) => {\n        setAddTransactionLoad(false);\n        if (\n          !!answer.data &&\n          !answer.data.message &&\n          answer.statusText === 'OK' &&\n          answer.status === 200\n        ) {\n          setMessageType('success');\n          setMessage('Операция выполнена');\n          getInfo(id);\n          setTransactionInfo({ ...transactionInfo, amount: '', comment: '' });\n        } else {\n          setMessageType('error');\n          setMessage(answer.data.message);\n        }\n      })\n      .catch((data) => {\n        setAddTransactionLoad(false);\n        setMessageType('error');\n        setMessage('Ошибка: ' + data);\n      });\n  };\n\n  const handlerDate = (inputID) => (event) => {\n    const { value } = event.target;\n    setErrorDate({ ...errorDate, [inputID]: value.length === 0 });\n    setValueDate({ ...valueDate, [inputID]: value });\n  };\n\n  const getTransactions = () => {\n    setLoadingTransaction(true);\n    service.getTransactions(id, valueDate.dateFrom, valueDate.dateTo).then((answer) => {\n      answer.data.map((transaction) => {\n        const date = new Date(transaction.date);\n        transaction.dateFormatted = `${date.toLocaleDateString('ru-RU')} ${date.toLocaleTimeString(\n          'ru-RU'\n        )}`;\n      });\n      setTransactions(answer.data);\n      setLoadingTransaction(false);\n    });\n  };\n\n  return (\n    <>\n      {loadingPage && <Loader color=\"blue\" fullscreen={true} centered={true} />}\n      {!loadingPage && userNotFound && (\n        <>\n          <div className=\"xsui-typography--title\">Пользователя с таким id не существует</div>\n          <Link to=\"/\">Вернуться к списку пользователей</Link>\n        </>\n      )}\n      {!loadingPage && !userNotFound && (\n        <>\n          <div className=\"title\">\n            <Link to=\"/\">Вернуться к списку пользователей</Link>\n          </div>\n          <UserCard user={user} isAdding={false} />\n          <Paper className=\"paper\">\n            <Collapse\n              isOpened={false}\n              staticElements={1}\n              collapsedLabel={() => `Ввести данные`}\n              expandedLabel={() => 'Спрятать'}\n            >\n              <Typography component=\"p\" align=\"left\" className=\"title\">\n                Добавить операцию\n              </Typography>\n              <form onSubmit={handlerAddTransation}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={5}>\n                    <FormControl fullWidth>\n                      <TextField\n                        id=\"amount\"\n                        label=\"Сумма\"\n                        variant=\"outlined\"\n                        onChange={handlerOnChangeTransaction('amount')}\n                        value={transactionInfo.amount}\n                        type=\"number\"\n                        required\n                        error={errorAmount}\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} md={5}>\n                    <FormControl fullWidth>\n                      <TextField\n                        id=\"comment\"\n                        label=\"Комментарий\"\n                        variant=\"outlined\"\n                        onChange={handlerOnChangeTransaction('comment')}\n                        value={transactionInfo.comment}\n                        required\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} md={2} align=\"right\" className=\"button__height\">\n                    <Button\n                      type=\"submit\"\n                      appearance=\"secondary\"\n                      fetching={addTransactionLoad}\n                      disabled={errorAmount}\n                    >\n                      Добавить\n                    </Button>\n                  </Grid>\n                </Grid>\n              </form>\n            </Collapse>\n          </Paper>\n          <Paper>\n            <Typography component=\"p\" align=\"left\" className=\"title__table\">\n              Все операции пользователя\n            </Typography>\n            <Grid container spacing={2} className=\"datePicker\">\n              <Grid item xs={12} md={5}>\n                <TextField\n                  id=\"dateFrom\"\n                  label=\"Дата с\"\n                  type=\"datetime-local\"\n                  defaultValue={valueDate.dateFrom}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={handlerDate('dateFrom')}\n                  error={errorDate.dateFrom}\n                />\n              </Grid>\n              <Grid item xs={12} md={5}>\n                <TextField\n                  id=\"dateTo\"\n                  label=\"Дата по\"\n                  type=\"datetime-local\"\n                  defaultValue={valueDate.dateTo}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={handlerDate('dateTo')}\n                  error={errorDate.dateTo}\n                />\n              </Grid>\n              <Grid item xs={12} md={2} align=\"right\" className=\"button__height\">\n                <Button\n                  type=\"submit\"\n                  appearance=\"secondary\"\n                  fetching={loadingTransaction}\n                  disabled={errorDate.dateFrom || errorDate.dateTo}\n                  onClick={getTransactions}\n                >\n                  Поиск\n                </Button>\n              </Grid>\n            </Grid>\n            <Table\n              columns={columns}\n              rows={transactions}\n              compact={true}\n              className=\"table-wrapper\"\n              tableClassName=\"user-table\"\n              fetching={loadingTransaction || addTransactionLoad}\n              renderEmptyMessage={() => <div>Нет данных</div>}\n              renderRow={(data) => {\n                return (\n                  <tr className={data.className} key={data.row.operation_id}>\n                    {data.columns.map((column, index) => (\n                      <data.CellComponent\n                        key={index}\n                        column={column}\n                        row={data.row}\n                        rowIndex={data.rowIndex}\n                        columnIndex={index}\n                      />\n                    ))}\n                  </tr>\n                );\n              }}\n            />\n          </Paper>\n          <Notification message={message} messageType={messageType} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default UserCardPage;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Grid, Paper, Typography, TextField, FormControl } from '@material-ui/core';\nimport { Table, Button } from 'xsolla-uikit';\nimport Pagination from 'xsolla-uikit/lib/pagination'; //отсутствует в общем списке\n\nimport './userlist.css';\nimport UserCard from '../../components/UserCard/userCard';\nimport { Service } from '../../Service';\nconst service = new Service();\n\nconst columns = [\n  {\n    id: 'rowIndex',\n    name: '№',\n    fieldGetter: 'rowIndex',\n  },\n  {\n    id: 'register_date',\n    name: 'Дата регистрации',\n    fieldGetter: 'register_date',\n  },\n  {\n    id: 'user_id',\n    name: 'ID',\n    fieldGetter: 'user_id',\n    maxWidth: 150,\n  },\n  {\n    id: 'user_name',\n    name: 'Имя пользователя',\n    fieldGetter: 'user_name',\n    maxWidth: 150,\n  },\n  {\n    id: 'balance',\n    name: 'Баланс',\n    fieldGetter: 'balance',\n    maxWidth: 150,\n  },\n  {\n    id: 'email',\n    name: 'E-mail',\n    fieldGetter: 'email',\n  },\n];\n\nconst UserList = (props) => {\n  const history = useHistory();\n  const [users, setUsers] = useState([]);\n  const [recordsTotal, setRecordsTotal] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const [loadSearching, setLoadSearching] = useState(false);\n  const [filters, setFilters] = useState({\n    user_requisites: '',\n    email: '',\n    size: 10,\n  });\n  const [errorEmail, setErrorEmail] = useState(false);\n\n  useEffect(() => {\n    getUsers();\n  }, [currentPage]);\n\n  const getUsers = () => {\n    setLoadSearching(true);\n    service\n      .getUsers(filters, currentPage)\n      .then((items) => {\n        setUsers(items.data.data);\n        setRecordsTotal(items.data.recordsTotal || 0);\n        setLoadSearching(false);\n        return () => {};\n      })\n      .catch(() => {\n        setLoadSearching(false);\n      });\n  };\n\n  const handlerTableClick = (param) => {\n    history.push(`/usercard/${param}`);\n  };\n\n  const handlerFilterChange = (inputID) => (event) => {\n    setFilters({ ...filters, [inputID]: event.target.value });\n  };\n\n  const validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const handlerEmailChange = (event) => {\n    const { value } = event.target;\n    setErrorEmail(value.length !== 0 && !validateEmail(value));\n    setFilters({ ...filters, email: value });\n  };\n\n  const handlerSearchClick = () => {\n    setPerPage(parseInt(filters.size));\n    if (currentPage === 1) getUsers();\n    else setCurrentPage(1);\n  };\n\n  return (\n    <>\n      <UserCard isAdding updateTable={getUsers} />\n      <Paper className=\"paper\">\n        <Typography component=\"p\" align=\"left\" className=\"title\">\n          Фильтры\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={4}>\n            <FormControl fullWidth>\n              <TextField\n                id=\"user_requisites\"\n                label=\"ID или имя пользователя\"\n                variant=\"outlined\"\n                onChange={handlerFilterChange('user_requisites')}\n                value={filters.user_requisites}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <FormControl fullWidth>\n              <TextField\n                label=\"E-mail\"\n                variant=\"outlined\"\n                error={errorEmail}\n                onChange={handlerEmailChange}\n                value={filters.email}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={2}>\n            <FormControl fullWidth>\n              <TextField\n                id=\"size\"\n                label=\"Показывать по\"\n                variant=\"outlined\"\n                onChange={handlerFilterChange('size')}\n                value={filters.size}\n                type=\"number\"\n                inputProps={{ min: \"0\", max: \"10\", step: \"1\" }}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={2} align=\"right\" className=\"button__height\">\n            <Button\n              type=\"submit\"\n              appearance=\"secondary\"\n              onClick={handlerSearchClick}\n              disabled={errorEmail}\n              fetching={loadSearching}\n            >\n              Поиск\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Paper>\n        <Typography component=\"p\" align=\"left\" className=\"title__table\">\n          Все пользователи\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Pagination\n              current={currentPage}\n              total={recordsTotal}\n              perPage={perPage}\n              onChangePage={setCurrentPage}\n              className=\"pagin\"\n              size=\"sm\"\n            />\n          </Grid>\n        </Grid>\n        <Table\n          columns={columns}\n          rows={users}\n          compact={true}\n          className=\"table-wrapper\"\n          tableClassName=\"user-table\"\n          fetching={loadSearching}\n          renderEmptyMessage={() => <div>Нет данных</div>}\n          renderRow={(data) => {\n            data.row.rowIndex = (currentPage - 1)*perPage + data.rowIndex + 1;\n            \n            data.row['register_date'] = new Date(data.row['register_date']).toLocaleDateString(\n              'ru-RU'\n            );\n            return (\n              <tr\n                title=\"Двойнок клик: редактирование пользователя и просмотр операций\"\n                className={data.className}\n                key={data.row.user_id}\n                onClick={handlerTableClick.bind(null, data.row.user_id)}\n              >\n                {data.columns.map((column, index) => (\n                  <data.CellComponent\n                    key={index}\n                    column={column}\n                    row={data.row}\n                    rowIndex={data.rowIndex}\n                    columnIndex={index}\n                  />\n                ))}\n              </tr>\n            );\n          }}\n        />\n      </Paper>\n    </>\n  );\n};\n\nexport default UserList;\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport UserCardPage from './pages/UserCardPage/userCardPage';\nimport UserList from './pages/UserList/userlist';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Switch>\n          <Route path=\"/usercard/:id\">\n            <UserCardPage />\n          </Route>\n          <Route path=\"/users\">\n            <UserList/>\n          </Route>\n          <Redirect to=\"/users\" />\n        </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}